//{ Driver Code Starts
import java.util.*;

class GFG
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		int t = sc.nextInt();
		while(t>0)
		{
			int n = sc.nextInt();
			int a[] = new int[n];
			for(int i=0; i<n; i++)
				a[i] = sc.nextInt();
			Solution ob = new Solution();
			System.out.println(ob.findMaxDiff(a,n));
		t--;
		}
	}
}
// } Driver Code Ends


class Solution
{
    int findMaxDiff(int a[], int n)
    {
	    Stack<Integer>s=new Stack<>();
	    int left[]=new int[n];
	    int right[]=new int[n];
	    
	    s.push(0);
	    int k=0;
	    for(int i=0; i<n; i++){
	        if(s.peek()<a[i]){
	            left[k++]=s.peek();
	            s.push(a[i]);
	        }else{
	            while(s.peek()>=a[i]){
	                s.pop();
	            }
	             left[k++]=s.peek();
	        s.push(a[i]);
	        }
	       
	    }
	    k=n-1;
	    s.clear();
	    s.push(0);
	    for(int i=n-1; i>=0; i--){
	        if(s.peek()<a[i]){
	            right[k--]=s.peek();
	            s.push(a[i]);
	        }else{
	            while(s.peek()>=a[i]){
	                s.pop();
	            }
	            right[k--]=s.peek();
	        s.push(a[i]);
	        }
	        
	    }
	    int max=0;
	    for(int i=0; i<n;i++){
	        max=Math.max(max,Math.abs(left[i]-right[i]));
	    }
	    return max;
	    
    }
}
