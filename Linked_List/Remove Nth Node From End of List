/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        // if(head!=null) return null;
        // int count=0;
        // ListNode temp=head; 
        // while(temp!=null){
        //     count++;
        //     temp=temp.next;
        // }
        // temp=head;
        // int s=count-n; 

        // while(s-->0 && temp!=null){
        //     temp=temp.next;
        // }
        // temp.next=temp.next.next;
        // return head;


        ListNode start=new ListNode(0);
        ListNode slow=start,fast=start;
        start.next=head;
        for(int i=1; i<=n+1; i++){
            fast=fast.next;
        }
        while(fast!=null){
            slow=slow.next;
            fast=fast.next;
        }
        slow.next=slow.next.next;
        return start.next;
    }
}
