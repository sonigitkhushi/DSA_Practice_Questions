// class Solution {
//     public int sumIndicesWithKSetBits(List<Integer> nums, int k) {
//         int n=nums.size();
//         int sum=0;
//         ArrayList<Integer>a=new ArrayList<>();
//         for(int i=0; i<n;i++){
//             String s=Integer.toBinaryString(i);
//             if(k==isPossible(s)){
//                sum += a.add(i);
//             }
//         }
//         // int sum=0;
//         // System.out.println(a);
//         // for(int u:a){
//         //     sum+=nums.get(u);
//         // }
//         return sum;
//     }
//     public static int  isPossible(String s){
//         int count=0;
//        for (int i=0; i<s.length();i++){
//             if(s.charAt(i)=='1'){
//                 count++;
                   
//         }
        
//     }
//     return count;
// }
// }

class Solution {
    public int sumIndicesWithKSetBits(List<Integer> nums, int k) {
        int sum = 0;
        for(int i = 0;i<nums.size();i++){
            if(k==getCountOfSetBits(i)){
                sum+=nums.get(i);
            }
        }
        return sum;    
    }
    public int getCountOfSetBits(int index){
        int count = 0;
        String idxToBin = Integer.toBinaryString(index);
        for(int i=0;i<idxToBin.length();i++){
            if(idxToBin.charAt(i) == '1'){
                count++;
            }
        }
        return count;
    }
}
