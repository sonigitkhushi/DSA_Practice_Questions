//{ Driver Code Starts
import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
{
	public static void main(String[] args) throws IOException
	{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out=new PrintWriter(System.out);
        int t = Integer.parseInt(br.readLine().trim());
        while(t-->0)
        {
            String S = br.readLine().trim();
            Solution obj = new Solution();
            List<String> ans = obj.find_permutation(S);
            for( int i = 0; i < ans.size(); i++)
            {
                out.print(ans.get(i)+" ");
            }
            out.println();
                        
        }
        out.close();
	}
}


// } Driver Code Ends


class Solution {
    public List<String> find_permutation(String S) {
       ArrayList<String>a=new ArrayList<>();
       char[] arr=S.toCharArray();
       int n=arr.length;
       Arrays.sort(arr);
       boolean[] visit=new boolean[n];
       
       
       StringBuilder sb=new StringBuilder();
       generatePer(arr,visit,sb,a);
       return a;
    }
    
    
    private static void generatePer(char[]arr,boolean[] visit,StringBuilder sb, ArrayList<String> res){
        if(sb.length()==arr.length){
            res.add(sb.toString());
            return;
        }
        for(int i=0; i<arr.length; i++){
            if(!visit[i]){
                if(i>0 && arr[i]==arr[i-1] && !visit[i-1]) continue;
                visit[i]=true;
                sb.append(arr[i]);
                generatePer(arr,visit,sb,res);
                sb.deleteCharAt(sb.length()-1);
                visit[i]=false;
            }
        }
    }
}
