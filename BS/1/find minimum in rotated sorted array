class Solution {
    public int findMin(int[] nums) {
        // Arrays.sort(nums);
        // return nums[0];
           int min=Integer.MAX_VALUE;
           int s=0;
           int e=nums.length-1;
           while(s<=e){
               int mid=s+(e-s)/2;
            //    if(nums[s]<=nums[mid]){
            //        if(nums[s]<= min && min<=nums[mid]){
            //            min=Math.min(min,nums[s]);
            //            e=mid-1;
            //        }else s=mid+1;
            //    }
            //    else{
            //        if(nums[mid]>=min  && min<=nums[e]){
            //            s=mid+1;
            //        }else{
            //            e=mid-1;
            //        }
            //    }
            //    if(nums[mid]<=min){
            //        min=nums[mid];
            //    }

if(nums[s]<=nums[e]){
    min=Math.min(min,nums[s]);
    break;
}
if(nums[s]<=nums[mid]){
    min=Math.min(min,nums[s]);
    s++;
}else{
    min=Math.min(min,nums[mid]);
    e--;
}

           }
            return min;
        
    }
}
