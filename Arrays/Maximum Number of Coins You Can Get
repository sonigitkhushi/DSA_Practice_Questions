class Solution {
    public int maxCoins(int[] piles) {
        // int i=0;
        // int j=0;
        // int ma=Integer.MIN_VALUE;
        // int mm=Integer.MIN_VALUE;
        // int mb=Integer.MIN_VALUE;
        // int sum=0;
        // while(j<piles.length){
        //     if(j-i+1<3) j++;
        //     else if(j-i+1==3){
        //         for(int k=i; k<=j;k++){
        //             ma=Math.max(ma,piles[k]);
        //         }
        //         for(int u=i; u<=j;u++){
        //             if(mm<piles[u] && piles[u]<ma){
        //                 mm=piles[u];
        //             }
                   
        //         }
        //          sum+=mm;
        //         i=j+1;
        //         j++;
        //     }
        // }
        // return sum;

    //     Arrays.sort(piles);
    //     int ans=0;
    //     ArrayDeque<Integer>q=new ArrayDeque();
    //     for(int num:piles){
    //         q.addLast(num);
    //     }
    //    // System.out.println(q);
    //     while(!q.isEmpty()){
    //         q.removeLast();
    //         ans+=q.removeLast();
    //         q.removeLast();
    //     }
    //     return ans;
    Arrays.sort(piles);
    int ans=0;
    for(int i=piles.length/3; i<piles.length;i+=2){
        ans+=piles[i];
    }
    return ans;
    }
}
