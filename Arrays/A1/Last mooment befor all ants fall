class Solution {
    public int getLastMoment(int n, int[] left, int[] right) {
//         if(left.length==0 || right.length==0){
//             return n;
//         }
//         int s=0;
//         // if(left.length>0 && right.length>0){
//         //     s=left.length+right.length;
//         // }
//         // return s;
// int max=Integer.MIN_VALUE;
// int i=0;
// int j=0;
// int m=0;
// while(i<left.length && j<right.length){
//     if(left[i]<right[j]){
//         m=right[j];
//     }else if(right[j]<left[i]){
//         m=left[i];
//     }
//       max=Math.max(max,m);
//       i++;
//       j++;
// }
//         // for(int i=0; i<n; i++){
//         //     // if(left[i]>max){
//         //     //     max=left[i];
//         //     // }else if(right[i]>max){
//         //     //     max=right[i];
//         //     // }
//         //     max=Math.max(left[i],right[i]);
//         // }
//         return max;

        int time=0;
        for(int pos:left){
            time=Math.max(time,pos);
        }
        for(int pos:right){
            time=Math.max(time,n-pos);
        }
        return time;
    }
}
