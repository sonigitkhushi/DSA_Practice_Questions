
        class Solution {
    public int maxProfit(int[] prices) {
        // int lsf = Integer.MAX_VALUE;
        // int op = 0;
        // int pist = 0;
        
        // for(int i = 0; i < prices.length; i++){
        //     if(prices[i] < lsf){
        //         lsf = prices[i];
        //     }
        //     pist = prices[i] - lsf;
        //     if(op < pist){
        //         op = pist;
        //     }
        // }
        // return op;


       //int i=0; 
        // int max=0;
        // int n=prices.length;
        // int pro=0;
        // for(int i=0; i<n-1; i++){

        
        // for(int j=i+1; j<n; j++){
        //     if(prices[j]>prices[i]){
        //          pro=prices[j]-prices[i];
        //          max=Math.max(max,pro);
        //     }
           
        //    // i++;
        // }}
        // return max;


        int min=Integer.MAX_VALUE;
        int max=0;
        int n=prices.length;
        for(int i=0; i<n; i++){
            if(prices[i]<min){
                min=prices[i];
            }
            max=Math.max(prices[i]-min,max);
        }
        return max;
    }
}
  
