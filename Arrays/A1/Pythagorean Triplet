//{ Driver Code Starts
//Initial Template for Java



import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int tc = Integer.parseInt(br.readLine());
        while (tc-- > 0) {
            int n = Integer.parseInt(br.readLine());
            int[] arr = new int[n];
            String[] inputLine = br.readLine().split(" ");
            for (int i = 0; i < n; i++) {
                arr[i] = Integer.parseInt(inputLine[i]);
            }

            boolean ans = new Solution().checkTriplet(arr, n);
            System.out.println(ans ? "Yes" : "No");
        }
    }
}
// } Driver Code Ends


//User function Template for Java



class Solution {
    boolean checkTriplet(int[] arr, int n) {
        // code here
        int sum=0;
        for(int i=0; i<n-1; i++){
            for(int j=i+1; j<n; j++){
                sum=arr[i]*arr[i]+arr[j]*arr[j];
                for(int k=0; k<n; k++){
                    if(sum==arr[k]*arr[k]) return true;
                }
                
            }
            
        }
        return false;
    }
}

//efficient approach is using hashset 

 HashSet<Integer>a=new HashSet<>();
        for(int i=0; i<n; i++){
            a.add(arr[i]*arr[i]);
        }
        int sum=0;
        for(int i=0; i<n; i++){
            for(int j=i+1;j<n; j++){
                sum=(arr[i]*arr[i])+(arr[j]*arr[j]);
                if(a.contains(sum)) return true;
            }
        }
        return false;
