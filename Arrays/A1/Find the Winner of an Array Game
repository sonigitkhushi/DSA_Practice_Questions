// class Solution {
//     public int getWinner(int[] arr, int k) {
//         int max=0;
//         int n=arr.length;
//         ArrayList<Integer>a=new ArrayList<>();
//         for(int i=0; i<n; i++){
//             a.add(arr[i]);
//         }
//         int i=0;
//         int j=i+1;
//         while(i<n-1 && j<n){
//             if(i<k){
//                // max=Math.max(arr[i-1],arr[i]);
//             //     if(arr[i-1]>arr[i]){
//             //         max=arr[i-1];
//             //         arr[0]=max;
//             // arr[n-1]=arr[i-1];
//             //     }
//             //     else if(arr[i-1]<arr[i]){
//             //         max=arr[i];
//             //         arr[0]=max;
//             // arr[n-1]=arr[i-1];
//             //     }
//               if(a.get(i)>a.get(j)){
//                 //   int temp=a.get(i);
//                 //   a.get(0)=a.get(i);
//                 max=a.get(i);
//                   a.add(a.get(j));
//                   j++;
//               }
//               else{
//                 //   int temp=a.get(j);
//                 //   a.get(0)=a.get(j);
//                 max=a.get(j);
//                   a.add(a.get(i));
//                   i++;
//               }
            
//             }
//             i++;
//             j++;
             
         
//         }
//        return max;
//     }
// }

class Solution {
    public int getWinner(int[] arr, int k) {
        int winner = arr[0];
        int wins = 0;
        
        for (int i = 1; i < arr.length; i++) {
            if (winner > arr[i])
                wins++;
            else {
                wins = 1;
                winner = arr[i];
            }
            
            if (wins == k)
                break;
        }
        
        return winner;
    }
}
