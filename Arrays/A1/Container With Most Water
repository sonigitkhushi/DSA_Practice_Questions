class Solution {
    public int maxArea(int[] height) {
        
//         int max1=Integer.MIN_VALUE;
//         int max2=Integer.MIN_VALUE;
//         int n=0;
//         for(int i=0; i<height.length; i++){
//             if(max1<height[i]){
//                 max1=height[i];
//             }

//         }
//         for(int i=height.length-1; i>=0; i--){
//             if(max2<height[i] && max1>height[i]){
//                 max2=height[i];
//             }
//         }
// if(max1>max2 ) {
//     n=max1-max2;
//     max1=max1-n;

// }
// int count=0;
// for(int i=max1; i<max2; i++){
//     count++;
// }
// //if(max1== 1 && max2==1) return 1;
// return max1*count;

//         // System.out.println(max1 +" "+ max2);
//         // return 1;

    //     int i=0;
    //     int j=i+1;
    //     int max=0;
    //    while(i<j && i<height.length -1 && j<height.length){
    //             int area=Math.min(height[i],height[j])*(j-i);
    //             max=Math.max(max,area);
    //             i++;
    //             j++;
    //         }
        
    //     return max;


    int i=0;
    int max=0;
    int j=height.length-1;
    int ans=0;

    while(i<j){
        if(height[i]<=height[j]){
            max=height[i]*(j-i);
            i++;
        }
        else{
            max=height[j]*(j-i);
            j--;
        }
         if(max>ans) ans=max;
    
    }
   
    return ans;
    }
}
