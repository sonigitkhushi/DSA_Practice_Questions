//{ Driver Code Starts
import java.io.*;
import java.util.*;

public class GFG {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int tc = scanner.nextInt();
        
        while (tc-- > 0) {
            int V = scanner.nextInt();
            int E = scanner.nextInt();
            
            List<Integer>[] adj = new ArrayList[V];
            for (int i = 0; i < V; i++) {
                adj[i] = new ArrayList<>();
            }
            
            for (int i = 0; i < E; i++) {
                int u = scanner.nextInt();
                int v = scanner.nextInt();
                adj[u].add(v);
                adj[v].add(u);
            }
            
            // String x=scanner.nextLine();
            // scanner.nextLine();
            
            Solution obj = new Solution();
            int ans = obj.isEulerCircuit(V, adj);
            System.out.println(ans);
        }
    }
}
// } Driver Code Ends


class Solution{
    public int isEulerCircuit(int V, List<Integer>[] adj) 
    {
        // code here
        // boolean[]v=new boolean[V];
        // Queue<Integer>q=new LinkedList<>();
        // q.add(adj.get(0));
        // v[0]=true;
        // while(!q.isEmpty()){
        //     if(!v[i]){
        //         v[i]=true;
        //         for(int n:adj.get(i)){
        //             if(!v[n]){
        //                 v[n]=true;
        //                 if(v[n] !=parent){
        //                     return 1;
        //                 }else
        //                 return 2;
        //             }
        //         }
        //     }
            
        // }
        // return 0;
        
        
        int odd=0;
        int ev=0;
        for(int i=0; i<V; i++){
            if(adj[i].size()%2==0) ev++;
            else odd++;
        }
        if(ev==V) return 2;
        else if(odd>0 && odd==2) return 1;
        return 0;
    }
}
