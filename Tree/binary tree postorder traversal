/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    // public List<Integer>post(TreeNode root,List<Integer>a){
    //     if(root==null) return a;
    //     post(root.left,a);
    //     post(root.right,a);
    //     a.add(root.val);
    //     return a;
    // }
    public List<Integer> postorderTraversal(TreeNode root) {
        // List<Integer>a=new ArrayList<>();
        // post(root,a);
        // return a;
        Stack<TreeNode>s1=new Stack<>();
        Stack<TreeNode>s2=new Stack<>();
        List<Integer>a=new ArrayList<>();
        if(root==null) return a;
        s1.push(root);
        while(!s1.isEmpty()){
            root=s1.pop();
            s2.add(root);
            if(root.left!=null){
                s1.push(root.left);
            }
            if(root.right!=null){
                s1.push(root.right);
            }
        }
        while(!s2.isEmpty()){
            a.add(s2.pop().val);
        }
        return a;
    }
}
