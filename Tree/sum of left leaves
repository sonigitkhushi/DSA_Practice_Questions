/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int sumOfLeftLeaves(TreeNode root) {
        if(root==null) return 0;
        int sum=0;
       if (root.left != null && root.left.left == null && root.left.right == null) {
            return root.left.val + sumOfLeftLeaves(root.right);
        }

		
        return sumOfLeftLeaves(root.left) + sumOfLeftLeaves(root.right);
    //     Queue<TreeNode>q=new LinkedList<>();
    //     ArrayList<Integer>a=new ArrayList<>();
    //     q.offer(root);
    //     while(!q.isEmpty()){
    //         int size=q.size();
    //         for(int i=0;i<size;i++){
    //             TreeNode n=q.poll();
    //             if(n.left=null){
    //                 a.add(n.val);
    //             }

                
    //         }
            
    //     }
    // int sum=0;
    //     for(int i:a){
    //         sum+=i;
    //     }
    //     return sum;
    }
}
